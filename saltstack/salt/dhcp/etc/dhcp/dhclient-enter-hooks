#!/usr/bin/env bash

make_resolv_conf() {
    
    [ "${interface}" != "eth0" ] && exit 0;

    echo "; generated by /etc/dhcp/dhclient-enter-hooks" > /etc/resolv.conf

    [ ! -f /etc/unbound/conf.d/ ] && mkdir -p /etc/unbound/conf.d/

    echo "forward-zone:" > /etc/unbound/conf.d/99-default.conf
    echo "  name: \".\"" >> /etc/unbound/conf.d/99-default.conf
    for nameserver in ${new_domain_name_servers} ; do
      echo "  forward-addr: ${nameserver}" >> /etc/unbound/conf.d/99-default.conf
    done
 
    echo "forward-zone:" >> /etc/unbound/conf.d/99-default.conf
    echo "  name: \"in-addr.arpa.\"" >> /etc/unbound/conf.d/99-default.conf
    for nameserver in ${new_domain_name_servers} ; do
      echo "  forward-addr: ${nameserver}" >> /etc/unbound/conf.d/99-default.conf
    done

    if [ -n "${SEARCH}" ]; then
        search="${SEARCH}"
    else
        if [ -n "${new_domain_search}" ]; then
            # Remove instaces of \032 (#450042)
            search="${new_domain_search//\\032/ }"
        elif [ -n "${new_domain_name}" ]; then
            # Note that the DHCP 'Domain Name Option' is really just a domain
            # name, and that this practice of using the domain name option as
            # a search path is both nonstandard and deprecated.
            search="${new_domain_name}"
        fi
    fi

    if [ -n "${search}" ]; then
        echo "search ${search}" >> /etc/resolv.conf
    fi

    if [ -n "${RES_OPTIONS}" ]; then
        echo "options ${RES_OPTIONS}" >> /etc/resolv.conf
    fi

    echo "nameserver 127.0.0.1" >> /etc/resolv.conf

    if [ ! -f /etc/hostname ]; then
        echo $new_host_name > /etc/hostname
        hostname -F /etc/hostname
    fi
    
    pkill -SIGHUP unbound

    exit 0;
}